services:
  portainer-agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - "9001:9001"

  frigate:
    container_name: frigate
    privileged: true
    restart: unless-stopped
    image: blakeblackshear/frigate:0.11.1
    shm_size: "512mb"
    devices:
      - /dev/bus/usb:/dev/bus/usb
      - /dev/dri/renderD128
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/config.yml:/config/config.yml:ro
      - /media/nvr:/media/frigate
      - type: tmpfs
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
      - 1935:1935
    environment:
      - FRIGATE_CAM_DOMAIN
      - FRIGATE_RTSP_USER
      - FRIGATE_RTSP_PASSWORD
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:5000/" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      - mqtt

  scrypted:
    image: koush/scrypted
    container_name: frigate-scrypted
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./scrypted:/server/volume
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:1.6
    init: true
    ports:
      - 1883:1883
    healthcheck:
      test: [ "CMD", "timeout", "1", "mosquitto_sub", "-h", "localhost", "-p", "1883", "-t", "'topic'", "-E", "-i", "probe" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  amcrest2mqtt:
    container_name: amcrest2mqtt
    image: dchesterton/amcrest2mqtt:latest
    restart: unless-stopped
    environment:
      - AMCREST_HOST
      - AMCREST_PASSWORD
      - MQTT_HOST=mqtt
      - MQTT_USERNAME=admin
      - HOME_ASSISTANT=true
    depends_on:
      - mqtt

  frigate-home-proxy:
    image: ghcr.io/gitgc/home-proxy-webserver:main
    container_name: frigate-home-proxy
    restart: unless-stopped
    init: true
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_SUBDOMAIN
      - CADDY_DOMAIN
      - CADDY_PROXY_UPSTREAM
      - CADDY_HEALTH_CHECK_URI
      - DO_AUTH_TOKEN
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile:ro"
      - "./home-proxy-webserver/site/:/var/www/html/"
      - "./home-proxy-webserver/caddy_data/:/data/"
      - "./home-proxy-webserver/caddy_config/:/config/"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "${CADDY_HEALTH_CHECK_URI}" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      - frigate

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_SCHEDULE
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
